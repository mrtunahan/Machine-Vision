{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNKJoVPzCyyNl94NmHjGujf",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mrtunahan/Machine-Vision/blob/main/Image%20Classification%20with%20CNN\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "Fb9Pm9m5XNnI",
        "outputId": "188ca284-0e90-42c1-bc33-98806b3704e3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'\\nGraph Attention Layer\\n\\n@author: Ahmet Tunahan Korkmaz (No: 211137124)\\n'"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "\"\"\"\n",
        "Graph Attention Layer\n",
        "\n",
        "@author: Ahmet Tunahan Korkmaz (No: 211137124)\n",
        "\"\"\""
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dIMkgk_7XpVA",
        "outputId": "a59414e5-924f-46d2-ca29-781f6d3e0cfa"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import random\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras.datasets import cifar10\n",
        "from tensorflow.keras.models import Sequential\n",
        "# one-hot encoding\n",
        "from tensorflow.keras.utils import to_categorical\n",
        "# use ImageDataGenerator for image augmentations\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D, Dropout, Flatten"
      ],
      "metadata": {
        "id": "jvnn8948FE6G"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# settings for reproducibility\n",
        "seed = 42\n",
        "random.seed(seed)\n",
        "tf.random.set_seed(seed)\n",
        "np.random.seed(seed)\n",
        "\n",
        "os.environ['TF_DETERMINISTIC_OPS'] = '1'"
      ],
      "metadata": {
        "id": "p1NrmjUsmmtd"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "(train_images, train_labels), (test_images, test_labels) = cifar10.load_data()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eUKqCj-SmpxE",
        "outputId": "0fdcb62c-e139-4470-dcc9-5298637bf1a6"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
            "170500096/170498071 [==============================] - 6s 0us/step\n",
            "170508288/170498071 [==============================] - 6s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Training data shape : ', train_images.shape, train_labels.shape)\n",
        "\n",
        "print('Testing data shape : ', test_images.shape, test_labels.shape)\n",
        "\n",
        "# Find the unique numbers from the train labels\n",
        "classes = np.unique(train_labels)\n",
        "nClasses = len(classes)\n",
        "print('Total number of outputs : ', nClasses)\n",
        "print('Output classes : ', classes)\n",
        "\n",
        "plt.figure(figsize=[4,2])\n",
        "\n",
        "# Display the first image in training data\n",
        "plt.subplot(121)\n",
        "plt.imshow(train_images[0,:,:], cmap='gray')\n",
        "plt.title(\"Ground Truth : {}\".format(train_labels[0]))\n",
        "\n",
        "# Display the first image in testing data\n",
        "plt.subplot(122)\n",
        "plt.imshow(test_images[0,:,:], cmap='gray')\n",
        "plt.title(\"Ground Truth : {}\".format(test_labels[0]))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 252
        },
        "id": "tMwcPhD-murj",
        "outputId": "8c5a6be0-1eb9-4567-9ab9-d550532d2628"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training data shape :  (50000, 32, 32, 3) (50000, 1)\n",
            "Testing data shape :  (10000, 32, 32, 3) (10000, 1)\n",
            "Total number of outputs :  10\n",
            "Output classes :  [0 1 2 3 4 5 6 7 8 9]\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Ground Truth : [3]')"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x144 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Find the shape of input images and create the variable input_shape\n",
        "nRows,nCols,nDims = train_images.shape[1:]\n",
        "train_data = train_images.reshape(train_images.shape[0], nRows, nCols, nDims)\n",
        "test_data = test_images.reshape(test_images.shape[0], nRows, nCols, nDims)\n",
        "input_shape = (nRows, nCols, nDims)\n",
        "\n",
        "# Change to float datatype\n",
        "train_data = train_data.astype('float32')\n",
        "test_data = test_data.astype('float32')\n",
        "\n",
        "# Scale the data to lie between 0 to 1\n",
        "train_data /= 255\n",
        "test_data /= 255\n",
        "\n",
        "# Change the labels from integer to categorical data\n",
        "train_labels_one_hot = to_categorical(train_labels)\n",
        "test_labels_one_hot = to_categorical(test_labels)"
      ],
      "metadata": {
        "id": "G-UmE5exmy-U"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the change for category label using one-hot encoding\n",
        "print('Original label 0 : ', train_labels[0])\n",
        "print('After conversion to categorical ( one-hot ) : ', train_labels_one_hot[0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kXXDAkb-m4aG",
        "outputId": "3760334b-279b-4d01-96e7-93cf8cee26a9"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original label 0 :  [6]\n",
            "After conversion to categorical ( one-hot ) :  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def createModel():\n",
        "    model = Sequential()\n",
        "    # The first two layers with 32 filters of window size 3x3\n",
        "    model.add(Conv2D(32, (3, 3), padding='same', activation='relu', input_shape=input_shape))\n",
        "    model.add(Conv2D(32, (3, 3), activation='relu'))\n",
        "    model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "    model.add(Dropout(0.25))\n",
        "\n",
        "    model.add(Conv2D(64, (3, 3), padding='same', activation='relu'))\n",
        "    model.add(Conv2D(64, (3, 3), activation='relu'))\n",
        "    model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "    model.add(Dropout(0.25))\n",
        "\n",
        "    model.add(Conv2D(64, (3, 3), padding='same', activation='relu'))\n",
        "    model.add(Conv2D(64, (3, 3), activation='relu'))\n",
        "    model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "    model.add(Dropout(0.25))\n",
        "\n",
        "    model.add(Flatten())\n",
        "    model.add(Dense(512, activation='relu'))\n",
        "    model.add(Dropout(0.5))\n",
        "    model.add(Dense(nClasses, activation='softmax'))\n",
        "    \n",
        "    return model"
      ],
      "metadata": {
        "id": "FDQ_EO3Dm78t"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Initialize the model\n",
        "model1 = createModel()\n",
        "\n",
        "# Set training process params\n",
        "batch_size = 256\n",
        "epochs = 50\n",
        "\n",
        "# Set the training configurations: optimizer, loss function, accuracy metrics\n",
        "model1.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\n",
        "\n",
        "# View model architecture\n",
        "model1.summary()\n",
        "\n",
        "history = model1.fit(train_data,\n",
        "                     train_labels_one_hot,\n",
        "                     batch_size=batch_size, \n",
        "                     epochs=epochs, verbose=1, \n",
        "                     validation_data=(test_data, test_labels_one_hot)\n",
        "          )\n",
        "\n",
        "# Check the model results on the test set\n",
        "model1.evaluate(test_data, test_labels_one_hot)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V3H6uqzmnAXz",
        "outputId": "2961b54d-8f77-4451-d995-d7499fc72e70"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " conv2d (Conv2D)             (None, 32, 32, 32)        896       \n",
            "                                                                 \n",
            " conv2d_1 (Conv2D)           (None, 30, 30, 32)        9248      \n",
            "                                                                 \n",
            " max_pooling2d (MaxPooling2D  (None, 15, 15, 32)       0         \n",
            " )                                                               \n",
            "                                                                 \n",
            " dropout (Dropout)           (None, 15, 15, 32)        0         \n",
            "                                                                 \n",
            " conv2d_2 (Conv2D)           (None, 15, 15, 64)        18496     \n",
            "                                                                 \n",
            " conv2d_3 (Conv2D)           (None, 13, 13, 64)        36928     \n",
            "                                                                 \n",
            " max_pooling2d_1 (MaxPooling  (None, 6, 6, 64)         0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " dropout_1 (Dropout)         (None, 6, 6, 64)          0         \n",
            "                                                                 \n",
            " conv2d_4 (Conv2D)           (None, 6, 6, 64)          36928     \n",
            "                                                                 \n",
            " conv2d_5 (Conv2D)           (None, 4, 4, 64)          36928     \n",
            "                                                                 \n",
            " max_pooling2d_2 (MaxPooling  (None, 2, 2, 64)         0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " dropout_2 (Dropout)         (None, 2, 2, 64)          0         \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 256)               0         \n",
            "                                                                 \n",
            " dense (Dense)               (None, 512)               131584    \n",
            "                                                                 \n",
            " dropout_3 (Dropout)         (None, 512)               0         \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 10)                5130      \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 276,138\n",
            "Trainable params: 276,138\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/50\n",
            "196/196 [==============================] - 24s 67ms/step - loss: 2.0578 - accuracy: 0.2385 - val_loss: 1.7666 - val_accuracy: 0.3536\n",
            "Epoch 2/50\n",
            "196/196 [==============================] - 12s 64ms/step - loss: 1.6891 - accuracy: 0.3838 - val_loss: 1.6722 - val_accuracy: 0.3936\n",
            "Epoch 3/50\n",
            "196/196 [==============================] - 12s 63ms/step - loss: 1.5057 - accuracy: 0.4541 - val_loss: 1.4277 - val_accuracy: 0.4843\n",
            "Epoch 4/50\n",
            "196/196 [==============================] - 14s 69ms/step - loss: 1.3780 - accuracy: 0.5066 - val_loss: 1.2887 - val_accuracy: 0.5398\n",
            "Epoch 5/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 1.2754 - accuracy: 0.5476 - val_loss: 1.1747 - val_accuracy: 0.5781\n",
            "Epoch 6/50\n",
            "196/196 [==============================] - 13s 66ms/step - loss: 1.1813 - accuracy: 0.5798 - val_loss: 1.2559 - val_accuracy: 0.5621\n",
            "Epoch 7/50\n",
            "196/196 [==============================] - 12s 64ms/step - loss: 1.1177 - accuracy: 0.6073 - val_loss: 1.1024 - val_accuracy: 0.6156\n",
            "Epoch 8/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 1.0531 - accuracy: 0.6288 - val_loss: 1.1955 - val_accuracy: 0.5927\n",
            "Epoch 9/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 1.0061 - accuracy: 0.6481 - val_loss: 1.0376 - val_accuracy: 0.6349\n",
            "Epoch 10/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.9533 - accuracy: 0.6677 - val_loss: 0.9286 - val_accuracy: 0.6804\n",
            "Epoch 11/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.9079 - accuracy: 0.6832 - val_loss: 0.9562 - val_accuracy: 0.6622\n",
            "Epoch 12/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.8787 - accuracy: 0.6924 - val_loss: 0.8314 - val_accuracy: 0.7103\n",
            "Epoch 13/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.8375 - accuracy: 0.7041 - val_loss: 0.8632 - val_accuracy: 0.6985\n",
            "Epoch 14/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.8101 - accuracy: 0.7153 - val_loss: 0.7652 - val_accuracy: 0.7363\n",
            "Epoch 15/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.7799 - accuracy: 0.7265 - val_loss: 0.8446 - val_accuracy: 0.7024\n",
            "Epoch 16/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.7545 - accuracy: 0.7361 - val_loss: 0.7996 - val_accuracy: 0.7299\n",
            "Epoch 17/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.7342 - accuracy: 0.7455 - val_loss: 0.7469 - val_accuracy: 0.7443\n",
            "Epoch 18/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.7120 - accuracy: 0.7521 - val_loss: 0.7987 - val_accuracy: 0.7244\n",
            "Epoch 19/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.6897 - accuracy: 0.7580 - val_loss: 0.7008 - val_accuracy: 0.7593\n",
            "Epoch 20/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.6702 - accuracy: 0.7680 - val_loss: 0.7237 - val_accuracy: 0.7572\n",
            "Epoch 21/50\n",
            "196/196 [==============================] - 12s 64ms/step - loss: 0.6563 - accuracy: 0.7716 - val_loss: 0.7040 - val_accuracy: 0.7590\n",
            "Epoch 22/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.6366 - accuracy: 0.7782 - val_loss: 0.6840 - val_accuracy: 0.7664\n",
            "Epoch 23/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.6262 - accuracy: 0.7807 - val_loss: 0.7231 - val_accuracy: 0.7608\n",
            "Epoch 24/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.6154 - accuracy: 0.7851 - val_loss: 0.6777 - val_accuracy: 0.7725\n",
            "Epoch 25/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.6018 - accuracy: 0.7904 - val_loss: 0.8408 - val_accuracy: 0.7282\n",
            "Epoch 26/50\n",
            "196/196 [==============================] - 12s 64ms/step - loss: 0.5937 - accuracy: 0.7964 - val_loss: 0.8176 - val_accuracy: 0.7270\n",
            "Epoch 27/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5812 - accuracy: 0.7979 - val_loss: 0.6253 - val_accuracy: 0.7872\n",
            "Epoch 28/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5718 - accuracy: 0.8051 - val_loss: 0.6441 - val_accuracy: 0.7828\n",
            "Epoch 29/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5616 - accuracy: 0.8041 - val_loss: 0.6354 - val_accuracy: 0.7901\n",
            "Epoch 30/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5546 - accuracy: 0.8074 - val_loss: 0.6705 - val_accuracy: 0.7754\n",
            "Epoch 31/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5513 - accuracy: 0.8076 - val_loss: 0.6801 - val_accuracy: 0.7837\n",
            "Epoch 32/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.5374 - accuracy: 0.8154 - val_loss: 0.6415 - val_accuracy: 0.7874\n",
            "Epoch 33/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.5353 - accuracy: 0.8144 - val_loss: 0.6661 - val_accuracy: 0.7788\n",
            "Epoch 34/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.5295 - accuracy: 0.8171 - val_loss: 0.6318 - val_accuracy: 0.7948\n",
            "Epoch 35/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.5179 - accuracy: 0.8200 - val_loss: 0.6618 - val_accuracy: 0.7875\n",
            "Epoch 36/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5112 - accuracy: 0.8229 - val_loss: 0.6505 - val_accuracy: 0.7823\n",
            "Epoch 37/50\n",
            "196/196 [==============================] - 13s 68ms/step - loss: 0.5111 - accuracy: 0.8241 - val_loss: 0.6664 - val_accuracy: 0.7780\n",
            "Epoch 38/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.5074 - accuracy: 0.8238 - val_loss: 0.6380 - val_accuracy: 0.7944\n",
            "Epoch 39/50\n",
            "196/196 [==============================] - 13s 67ms/step - loss: 0.4981 - accuracy: 0.8279 - val_loss: 0.6617 - val_accuracy: 0.7834\n",
            "Epoch 40/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4985 - accuracy: 0.8288 - val_loss: 0.7400 - val_accuracy: 0.7698\n",
            "Epoch 41/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4937 - accuracy: 0.8289 - val_loss: 0.7390 - val_accuracy: 0.7798\n",
            "Epoch 42/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.4938 - accuracy: 0.8307 - val_loss: 0.6669 - val_accuracy: 0.7852\n",
            "Epoch 43/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4830 - accuracy: 0.8330 - val_loss: 0.7533 - val_accuracy: 0.7595\n",
            "Epoch 44/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.4818 - accuracy: 0.8332 - val_loss: 0.6133 - val_accuracy: 0.8034\n",
            "Epoch 45/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4769 - accuracy: 0.8359 - val_loss: 0.8148 - val_accuracy: 0.7558\n",
            "Epoch 46/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.4747 - accuracy: 0.8352 - val_loss: 0.6400 - val_accuracy: 0.7941\n",
            "Epoch 47/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4736 - accuracy: 0.8384 - val_loss: 0.6794 - val_accuracy: 0.7857\n",
            "Epoch 48/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.4700 - accuracy: 0.8387 - val_loss: 0.6424 - val_accuracy: 0.8025\n",
            "Epoch 49/50\n",
            "196/196 [==============================] - 13s 65ms/step - loss: 0.4698 - accuracy: 0.8402 - val_loss: 0.6410 - val_accuracy: 0.7987\n",
            "Epoch 50/50\n",
            "196/196 [==============================] - 13s 64ms/step - loss: 0.4587 - accuracy: 0.8433 - val_loss: 0.7731 - val_accuracy: 0.7743\n",
            "313/313 [==============================] - 2s 7ms/step - loss: 0.7731 - accuracy: 0.7743\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.7730807662010193, 0.7742999792098999]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=[8,6])\n",
        "plt.plot(history.history['loss'],'r',linewidth=3.0)\n",
        "plt.plot(history.history['val_loss'],'b',linewidth=3.0)\n",
        "plt.legend(['Training loss', 'Validation Loss'],fontsize=18)\n",
        "plt.xlabel('Epochs ',fontsize=16)\n",
        "plt.ylabel('Loss',fontsize=16)\n",
        "plt.title('Loss Curves',fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "plUebkFepQZw",
        "outputId": "ce2a6da0-0480-48f5-add8-e3afa593e7b3"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Loss Curves')"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=[8,6])\n",
        "plt.plot(history.history['accuracy'],'r',linewidth=3.0)\n",
        "plt.plot(history.history['val_accuracy'],'b',linewidth=3.0)\n",
        "plt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=18)\n",
        "plt.xlabel('Epochs ',fontsize=16)\n",
        "plt.ylabel('Accuracy',fontsize=16)\n",
        "plt.title('Accuracy Curves',fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "5s1xe488pYw2",
        "outputId": "36594297-fca4-4dbb-916b-0b53965a426f"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Accuracy Curves')"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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OPHEE5k7dy49e/akdu3aHHbYYYAPECNHjuSoo46iQYMGVK5cmTZt2nDLLbewc+fOqPtk18Yeee7dd9+lS5cuVKlShX333Zebbropy1jk7NrYw+e2bNnC0KFDadSoEVWqVOHYY49l1qxZWd7Phg0buOSSS6hfvz41atSge/fuzJ07lxNPPJEWLVrE/Lmkpqby6quvct5553H00UfTqVMnnnvuuRzTT5o0iRNPPJE6depQrVo12rZty3XXXUdqampGGjNj/PjxHHXUUdSoUYMaNWpw6KGHcscdd2SkGTVqVI7NI+F/q0jOOYYMGcJ///tfjjvuOGrUqEGfPn0AWL16NX//+9/p2LEjdevWpUqVKrRr1477778/2zUSUlNTeeCBB+jYsSPVqlWjdu3adO7cmSeeeAKAMWPG4Jzjo48+yvLalJQU6tevT/fu3XP9XEsKldjzosAuUqr98ccfdO/enfPPP59zzz2X7du3A7Bq1SqeffZZzj33XPr370/FihWZOXMmDzzwAHPnzuWDDz6I6f7vvfceTz31FFdddRWXXHIJ77zzDg899BB169bltttui+kePXv2pGHDhtxxxx1s2LCBRx55hDPOOIOlS5dmlE5TUlLo0aMH8+bNY8iQIRx55JH88MMP9OjRg3r16uXrM3nnnXdYv349gwcPBvwXjOuvv55FixbRtm3bqLS3334799xzD+3atWPEiBHsu+++/P7770yaNIm77rqL5ORkAP72t78xYcIEjjrqKG6//Xbq1KnDL7/8wltvvcVdd92Vr/xFmjNnDpMmTeLyyy/PyC/ADz/8wOTJk+nbty+tW7dmz549zJgxg1tuuYUlS5YwduzYjLSpqan07NmTzz77jFNPPZWBAwdSpUoVfvzxRyZPnsywYcMYNGgQt956K88//zynnHJKVB6mTJnCxo0bueyyywr8PuLKzEr9dsQRR1ixGT7czC/VbnbffcX3HJEisHDhwpwvhn+PS+JWSC+88IIB9sILL0Sdb968uQE2fvz4LK9JSUmx1NTULOdHjhxpgM2aNSvj3NKlSw2wO++8M8u5atWq2dKlSzPOp6enW/v27a1x48ZR9x08eLCR6b2Gzw0dOjTq/BtvvGGAPfPMMxnnnnzySQPs7rvvjkobPt+8efMs7yUnvXr1shYtWlh6erqZma1bt84qVapkN998c1S6WbNm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TU3l2LFjbNiwwWf/iRMneOmll+jQoQPdu3fn+++/Z9q0afTs2ZPY2FicTietW7fmz3/+MydPnqzUOf31sZeWljJz5kwSEhKIioqiQ4cOZGdn+31/Tk4O99xzD1deeSUNGjSgXr16XH311bzwwgte+VJTU3nkkUcASEhIQES8+vwD9bHn5eUxfvx4WrRogcPhoEWLFowfP55jx4555St7/5YtW3jyySdp1aoVTqeTxMREli5dWqm6KHP48GE2btzIyJEjueWWW2jatCmZmZl+86oqixYtomfPntSvX5/69etz1VVX8Ze//MUr35kzZ5g1axadO3emXr16NGzYkG7dujF37lyvOpIAj/mueJ08x0ysXr2aq6++mujoaO69916g8telzIkTJ5g6dSrt2rUjKiqKJk2a0Lt3b1atWgXAxIkTERFyc33XLzt06BCRkZHcddddgSs1CM7L9dhDzlrsxpz37rzzTjIyMli8eDGDBg3y2rdq1SpOnTpV3lo/cOAAL7zwArfffjvDhg0jMjKSt956i1mzZrFz505ee+21apXh/vvv5+mnn6ZPnz786U9/4siRI4wfP57LL7/cJ++2bdt4++23ufXWW0lISOCHH37gxRdfZOzYsRw9epTJkycDcPfdd3PixAnWrVvHnDlziI2NBaBjx44By/Hdd9/Rq1cv9u7dy1133UXXrl3ZuXMnzz33HFu2bOH999/3WdZ1ypQpnDp1irvvvhun08lzzz1HamoqrVu35tprr63U51+2bBklJSWMHDmSyMhIUlJSeP755/nuu+9o2LChV94RI0aQnZ1Nz549mTp1Ko0aNSInJ4e1a9cyY8YMwBXU+/fvz7Zt20hKSmL48OFERUXx73//m5dffpk//vGPlSqXP3//+9955plnGDduHH/4wx/Kl2St7HUBOH78OL179+azzz5j0KBBjBs3jpKSEnbu3MnGjRsZOnQoY8eO5ZlnniErK4uZM2d6lWHp0qWUlJQwZsyYan+OSlHVWv9z9dVXa1D97neqroVbVdeuDe6xjfkF7dq1K+C+sl/p8/Gnuvr166cRERF68OBBr/RrrrlGHQ6HHj16VFVVi4qK9MyZMz7vnzZtmgL63nvvlaft27dPAX344Ycr1B86atSo8u2cnBwVEe3Xr58WFxeXp3/44YcqIgrovn37ytMLCwt9zl9SUqLXX3+9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\n",
            "text/plain": [
              "<Figure size 576x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Initialize the model\n",
        "model2 = createModel()\n",
        "\n",
        "model2.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\n",
        "\n",
        "# Set training process params\n",
        "batch_size = 256\n",
        "epochs = 50\n",
        "\n",
        "# Define transformations for train data\n",
        "datagen = ImageDataGenerator(\n",
        "        width_shift_range=0.1,  # randomly shift images horizontally (fraction of total width)\n",
        "        height_shift_range=0.1,  # randomly shift images vertically (fraction of total height)\n",
        "        horizontal_flip=True,  # randomly flip images\n",
        "        vertical_flip=False)  # randomly flip images\n",
        "\n",
        "\n",
        "# Fit the model on the batches generated by datagen.flow().\n",
        "history2 = model2.fit(datagen.flow(train_data, train_labels_one_hot, batch_size=batch_size),\n",
        "                      steps_per_epoch=int(np.ceil(train_data.shape[0] / float(batch_size))),\n",
        "                      epochs=epochs,\n",
        "                      validation_data=(test_data, test_labels_one_hot),\n",
        "                      workers=4\n",
        "           )\n",
        "\n",
        "model2.evaluate(test_data, test_labels_one_hot)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rxEkL-PZrvib",
        "outputId": "e17648ff-8a49-4eaa-c724-580e1abfdbc2"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "196/196 [==============================] - 41s 202ms/step - loss: 2.0838 - accuracy: 0.2303 - val_loss: 1.9203 - val_accuracy: 0.3089\n",
            "Epoch 2/50\n",
            "196/196 [==============================] - 39s 194ms/step - loss: 1.7735 - accuracy: 0.3535 - val_loss: 1.5447 - val_accuracy: 0.4394\n",
            "Epoch 3/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 1.5913 - accuracy: 0.4240 - val_loss: 1.3277 - val_accuracy: 0.5098\n",
            "Epoch 4/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 1.4590 - accuracy: 0.4742 - val_loss: 1.5010 - val_accuracy: 0.4865\n",
            "Epoch 5/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 1.3677 - accuracy: 0.5092 - val_loss: 1.1552 - val_accuracy: 0.5811\n",
            "Epoch 6/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 1.2952 - accuracy: 0.5383 - val_loss: 1.1751 - val_accuracy: 0.5797\n",
            "Epoch 7/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 1.2252 - accuracy: 0.5644 - val_loss: 1.0670 - val_accuracy: 0.6180\n",
            "Epoch 8/50\n",
            "196/196 [==============================] - 38s 189ms/step - loss: 1.1742 - accuracy: 0.5823 - val_loss: 1.0247 - val_accuracy: 0.6376\n",
            "Epoch 9/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 1.1227 - accuracy: 0.6042 - val_loss: 1.0883 - val_accuracy: 0.6210\n",
            "Epoch 10/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 1.0863 - accuracy: 0.6181 - val_loss: 1.0920 - val_accuracy: 0.6194\n",
            "Epoch 11/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 1.0435 - accuracy: 0.6329 - val_loss: 1.0000 - val_accuracy: 0.6537\n",
            "Epoch 12/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 1.0114 - accuracy: 0.6470 - val_loss: 0.8256 - val_accuracy: 0.7044\n",
            "Epoch 13/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.9724 - accuracy: 0.6597 - val_loss: 0.8501 - val_accuracy: 0.7007\n",
            "Epoch 14/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.9476 - accuracy: 0.6704 - val_loss: 0.9079 - val_accuracy: 0.6862\n",
            "Epoch 15/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.9241 - accuracy: 0.6769 - val_loss: 0.8333 - val_accuracy: 0.7129\n",
            "Epoch 16/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.8985 - accuracy: 0.6900 - val_loss: 0.7845 - val_accuracy: 0.7236\n",
            "Epoch 17/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.8799 - accuracy: 0.6965 - val_loss: 0.7946 - val_accuracy: 0.7220\n",
            "Epoch 18/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.8599 - accuracy: 0.7026 - val_loss: 0.7605 - val_accuracy: 0.7358\n",
            "Epoch 19/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.8367 - accuracy: 0.7105 - val_loss: 0.8271 - val_accuracy: 0.7137\n",
            "Epoch 20/50\n",
            "196/196 [==============================] - 39s 193ms/step - loss: 0.8287 - accuracy: 0.7147 - val_loss: 0.7830 - val_accuracy: 0.7318\n",
            "Epoch 21/50\n",
            "196/196 [==============================] - 39s 195ms/step - loss: 0.8071 - accuracy: 0.7236 - val_loss: 0.6591 - val_accuracy: 0.7778\n",
            "Epoch 22/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.7970 - accuracy: 0.7257 - val_loss: 0.6327 - val_accuracy: 0.7843\n",
            "Epoch 23/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.7810 - accuracy: 0.7323 - val_loss: 0.7032 - val_accuracy: 0.7635\n",
            "Epoch 24/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.7686 - accuracy: 0.7343 - val_loss: 0.6881 - val_accuracy: 0.7682\n",
            "Epoch 25/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.7629 - accuracy: 0.7380 - val_loss: 0.6914 - val_accuracy: 0.7575\n",
            "Epoch 26/50\n",
            "196/196 [==============================] - 37s 187ms/step - loss: 0.7486 - accuracy: 0.7423 - val_loss: 0.7071 - val_accuracy: 0.7551\n",
            "Epoch 27/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.7399 - accuracy: 0.7463 - val_loss: 0.6407 - val_accuracy: 0.7798\n",
            "Epoch 28/50\n",
            "196/196 [==============================] - 39s 193ms/step - loss: 0.7357 - accuracy: 0.7481 - val_loss: 0.5947 - val_accuracy: 0.7978\n",
            "Epoch 29/50\n",
            "196/196 [==============================] - 38s 193ms/step - loss: 0.7231 - accuracy: 0.7518 - val_loss: 0.6538 - val_accuracy: 0.7732\n",
            "Epoch 30/50\n",
            "196/196 [==============================] - 38s 189ms/step - loss: 0.7142 - accuracy: 0.7554 - val_loss: 0.6807 - val_accuracy: 0.7665\n",
            "Epoch 31/50\n",
            "196/196 [==============================] - 37s 188ms/step - loss: 0.7103 - accuracy: 0.7577 - val_loss: 0.6739 - val_accuracy: 0.7745\n",
            "Epoch 32/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.7081 - accuracy: 0.7583 - val_loss: 0.7709 - val_accuracy: 0.7376\n",
            "Epoch 33/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6991 - accuracy: 0.7612 - val_loss: 0.6304 - val_accuracy: 0.7865\n",
            "Epoch 34/50\n",
            "196/196 [==============================] - 39s 194ms/step - loss: 0.6939 - accuracy: 0.7634 - val_loss: 0.6339 - val_accuracy: 0.7878\n",
            "Epoch 35/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.6903 - accuracy: 0.7664 - val_loss: 0.6542 - val_accuracy: 0.7886\n",
            "Epoch 36/50\n",
            "196/196 [==============================] - 39s 194ms/step - loss: 0.6824 - accuracy: 0.7674 - val_loss: 0.6134 - val_accuracy: 0.7959\n",
            "Epoch 37/50\n",
            "196/196 [==============================] - 39s 196ms/step - loss: 0.6835 - accuracy: 0.7668 - val_loss: 0.5799 - val_accuracy: 0.8028\n",
            "Epoch 38/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6779 - accuracy: 0.7687 - val_loss: 0.5702 - val_accuracy: 0.8082\n",
            "Epoch 39/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6743 - accuracy: 0.7705 - val_loss: 0.6207 - val_accuracy: 0.7935\n",
            "Epoch 40/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6676 - accuracy: 0.7727 - val_loss: 0.5990 - val_accuracy: 0.7956\n",
            "Epoch 41/50\n",
            "196/196 [==============================] - 38s 193ms/step - loss: 0.6678 - accuracy: 0.7741 - val_loss: 0.5922 - val_accuracy: 0.8034\n",
            "Epoch 42/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6745 - accuracy: 0.7715 - val_loss: 0.5827 - val_accuracy: 0.8019\n",
            "Epoch 43/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.6583 - accuracy: 0.7750 - val_loss: 0.6119 - val_accuracy: 0.7981\n",
            "Epoch 44/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.6577 - accuracy: 0.7757 - val_loss: 0.7170 - val_accuracy: 0.7778\n",
            "Epoch 45/50\n",
            "196/196 [==============================] - 38s 191ms/step - loss: 0.6539 - accuracy: 0.7768 - val_loss: 0.7402 - val_accuracy: 0.7640\n",
            "Epoch 46/50\n",
            "196/196 [==============================] - 38s 193ms/step - loss: 0.6542 - accuracy: 0.7796 - val_loss: 0.5764 - val_accuracy: 0.8072\n",
            "Epoch 47/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6499 - accuracy: 0.7806 - val_loss: 0.5479 - val_accuracy: 0.8203\n",
            "Epoch 48/50\n",
            "196/196 [==============================] - 38s 192ms/step - loss: 0.6494 - accuracy: 0.7804 - val_loss: 0.6361 - val_accuracy: 0.7922\n",
            "Epoch 49/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.6538 - accuracy: 0.7811 - val_loss: 0.6938 - val_accuracy: 0.7733\n",
            "Epoch 50/50\n",
            "196/196 [==============================] - 38s 190ms/step - loss: 0.6461 - accuracy: 0.7816 - val_loss: 0.5793 - val_accuracy: 0.8093\n",
            "313/313 [==============================] - 2s 6ms/step - loss: 0.5793 - accuracy: 0.8093\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.5792913436889648, 0.8093000054359436]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=[8,6])\n",
        "plt.plot(history2.history['loss'],'r',linewidth=3.0)\n",
        "plt.plot(history2.history['val_loss'],'b',linewidth=3.0)\n",
        "plt.legend(['Training loss', 'Validation Loss'],fontsize=18)\n",
        "plt.xlabel('Epochs ',fontsize=16)\n",
        "plt.ylabel('Loss',fontsize=16)\n",
        "plt.title('Loss Curves',fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "55qfwkThqZkX",
        "outputId": "86051adb-dfaf-4833-f180-33229fbe5966"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Loss Curves')"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=[8,6])\n",
        "plt.plot(history2.history['accuracy'],'r',linewidth=3.0)\n",
        "plt.plot(history2.history['val_accuracy'],'b',linewidth=3.0)\n",
        "plt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=18)\n",
        "plt.xlabel('Epochs ',fontsize=16)\n",
        "plt.ylabel('Accuracy',fontsize=16)\n",
        "plt.title('Accuracy Curves',fontsize=16)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "OGRgWuzBqkgB",
        "outputId": "4e20ae1b-c684-43da-99f7-719859faa7d2"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Accuracy Curves')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}